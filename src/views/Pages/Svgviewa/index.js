import { array } from "prop-types"
import React, { useEffect, useState } from "react"
import { ListarLocalidad } from "utils/Querypanel"
import { insertLocalidad, getMapacolor, getLocalidadmapa } from "utils/Localidadmap"

import "./isvg.css"
import ExampleDataTable from "components/ReactTable/Datatable.js/ExampleTable"
import ModalFirma from "views/Components/MODAL/Modalfirma"
const Viewssvg = () => {
    const [localidadmap, setselection] = useState({
        name: "",
        color: '#A12121',
    })
    const [mapa, setmapa] = useState([])
    const [lista, setLsita] = useState([])
    const [localidad, setLocalidad] = useState([])

    function handelChange(e) {
        setselection({
            ...localidadmap,
            [e.name]: e.value
        })

    }

    /*
        function agergaraALarray(dato,id,color){
           let array = lista       
          // let nuevo = mapa
         // console.log(array)
                var index = array.findIndex(obj => obj.path==dato);
              if (index == -1) { 
                array.push({path:dato,id:id, fill:color});
                
              } else {
                do {
                  array.splice(index, 1);
                 index = array.indexOf({path:dato,id:id, fill:color});
                } while (index != -1);
              }
              setLsita(array)
            //  console.log("mpap?",nuevo) 
            insertLocalidad(array,{path:dato,id:id, fill:color})
            cargarcolores()
            listadecolores()
            
            }
            
            function cargarcolores (){
                let colores = getMapacolor()
                colores.length>0? setLsita(colores):''
                colores.length>0? colores.map((e,i)=>{
                    $("#"+e.path).attr("class","seleccion")               
                    $("#"+e.path).attr("machfilal",e.fill,"class","seleccion")        
                }):''
            }
                     $(document).on("click",".none",function(){
                    let co = document.getElementById("color").value;
                    let id = document.getElementById("name").value;
                    if(this.classList.contains('none')){
                        if(id.trim()=== "") {
                        return  }
                        else
                    agergaraALarray(this.getAttribute('id'),id,co)   
                              this.removeAttribute("class","")       
                              this.setAttribute("class","seleccion")   
                            }
                     })
                    $(document).on("click",".seleccion",function(){
                     if(this.classList.contains('seleccion')){
                        this.removeAttribute("machfilal")   
                        agergaraALarray(this.getAttribute('id'),'','')
                        this.removeAttribute("class","seleccion")   
                        this.setAttribute("class","")                             
                            } 
                     })
      
       
                     async function GetLocalidad(){
                        let obtent = await ListarLocalidad()
                        setLocalidad(obtent.data)
                        let nuevo = obtent.data.map((e,i)=>{
                            return{ id:e.id, nombre:e.nombre,color:''}
                        })
                        setmapa(obtent.data.map((e,i)=>{
                            return{ id:e.id, nombre:e.nombre,color:''}
                        }))
                        //console.log("localidades",nuevo)
                        sessionStorage.localidad = JSON.straingify(obtent.data)
                        cargarcolores()   
                    }
                    async function listadecolores(){
                        let nuevo = getLocalidadmapa()
                      //  console.log("Function mapa",nuevo)
                        let colores = getMapacolor()
                        const valorDuplicadas = [];
                        nuevo.length>0 && colores.length>0 ? colores.forEach(p => {
                                if(valorDuplicadas.findIndex(pd => pd.id === p.id) === -1) {       
                                 let index =nuevo.findIndex((e)=>parseInt(e.id)=== parseInt(p.id))
                                    valorDuplicadas.push({id:p.id,nombre:nuevo[index]?nuevo[index].nombre:'',color:p.fill});
                                }
                                }):''     
                        nuevo.length>0 && colores.length>0 ? nuevo.map((L)=>{
                                if(valorDuplicadas.findIndex((e)=>parseInt(e.id)=== parseInt(L.id))!=-1){
                                    L.color=valorDuplicadas[valorDuplicadas.findIndex((e)=>parseInt(e.id)=== parseInt(L.id))].color;
                                    return L
                                }else{
                                    return L
                                }
                                }):''
                       //         console.log("mutado",nuevo)  
    
                             // console.log("duplicado",valorDuplicadas)
                              nuevo.length>0 && colores.length>0?setmapa(nuevo) :''
                              nuevo.length>0 && colores.length>0? sessionStorage.localidad = JSON.straingify(nuevo):''
                    }*/

    useEffect(() => {
        const paths = document.querySelectorAll(" polygon.cuadro, rect.cuadro")
        paths.forEach(e => {
            e.addEventListener("click", function () {
                var t = document.createElementNS("http://www.w3.org/2000/svg", "text");
                var b = this.getBBox();
                console.log(b)
                console.log((b.x + b.width / 2) + " " + (b.y + b.height / 2))
                t.setAttribute("transform", "translate(" + (b.x + b.height / 8) + " " + (b.y + b.height / 2) + ")");
                t.textContent = "NOMBRE DE LOCALIDAD";
                t.setAttribute("machfilal", "white");
                t.setAttribute("font-size", (b.height / 10));
                this.parentNode.insertBefore(t, b.nextSibling);
                //  b.parentNode.insertBefore(t, b.nextSibling);

                //this.classList.add("class")   
                //this.setAttribute("machfilal","#DC2A27")
                //console.log( this)
            })
        })
        const textPaths = document.querySelectorAll("polygon.texto")

        textPaths.forEach(e => {
            e.addEventListener("click", function () {
                var t = document.createElementNS("http://www.w3.org/2000/svg", "text");
                var b = this.getBBox();
                console.log(b)
                //console.log((b.x + b.width/2) + " " + (b.y + b.height/2))
                t.setAttribute("transform", "translate(" + (b.x + b.height / 8) + " " + (b.y + b.height) + ")");
                t.textContent = "Sillas";
                t.setAttribute("machfilal", "white");
                t.setAttribute("font-size", (b.height));
                this.parentNode.insertBefore(t, b.nextSibling);
            })
        })


        //agregar id y class
        /*
 var t = document.createElementNS("http://www.w3.org/2000/svg", "text");
    var b = p.getBBox();
    t.setAttribute("transform", "translate(" + (b.x + b.width/2) + " " + (b.y + b.height/2) + ")");
    t.textContent = "a";
    t.setAttribute("machfilal", "red");
    t.setAttribute("font-size", "14");
    p.parentNode.insertBefore(t, p.nextSibling);*/

        /*
        const path = document.querySelectorAll("path")
          $(path).each(function(index){ 
                this.setAttribute("id", "mapas"+index)
                this.setAttribute("class", "mapas")
               // console.log(this)
                //alert($(this).text())
            });*/


    }, [])


    return (
        <>
            {/*<ModalFirma/>*/}
            <div className="d-flex flex-wrap">
                <div className="col-12 col-md-6">
                    <form className="container">
                        <div className="row">
                            <div className="col-8">
                                <label className="form-label">Selecione localidad elija el color de la Localidad </label>
                                <select className="form-control" value={localidadmap.name} name="name" id="name" onChange={(e) => handelChange(e.target)}>
                                    <option value="">

                                    </option>


                                    {localidad.length > 0 ?
                                        localidad.map((e, i) => {
                                            return (
                                                <option key={i} value={e.id} >{e.nombre}</option>
                                            )
                                        }) : ''
                                    }
                                </select>
                            </div>
                            <div className="col-sm">
                                <label className="form-label" >.</label>
                                <input
                                    className="form-control form-control-color"
                                    value={localidadmap.color} name="color" id="color"
                                    type="color"
                                    onChange={(e) => handelChange(e.target)}
                                />
                            </div>

                        </div>


                    </form>

                </div>
                <div className=" d-flex flex-column text-center justify-content-center col-12 col-md-6">
                    <div className="d-flex flex-wrap justify-content-center  pb-5">
                        {mapa.length > 0 ?
                            mapa.map((elm, i) => {
                                return (
                                    <div className="d-flex flex-row px-3 precios align-items-center" key={i}  >
                                        <div className="mx-1  rounded-4" style={{ height: 20, width: 20, backgroundColor: elm.color }}></div>
                                        <span>{elm.nombre}</span>
                                    </div>
                                )
                            }) : ''
                        }
                    </div>
                    <div className=" border d-flex text-center bg-azul justify-content-center" style={{ width: '100%' }}>


                        <svg className="p-0 m-0" width="90%" height="90%" xmlns="http://www.w3.org/2000/svg" 
                            viewBox="0 0 7500 5500">
                  
                            <g id="Capa_x0020_1">

                                <path class="rumi0" d="M3540.97 879.14c1410.21,-202.75 3435.36,-45.28 3483,135.82l340.94 1300.76c203.93,775.97 -1542.49,2122.79 -3071.98,2537.74 -2097.2,568.89 -3943.62,144.09 -4178.65,-982.26 -235.04,-1126.75 1244.46,-2678.29 3426.7,-2992.06z" />
                                <path class="rumi1 strumi0" d="M244.97 3246.02c-121.65,828.33 328.73,1367.69 1420.44,1583.43 2002.72,304.32 3690.08,-337.39 5147.53,-1675.16 324.4,-362.98 562.19,-758.25 392.91,-1353.91 -762.98,2605.46 -6411.29,3488.91 -6960.88,1445.64z" />
                                <path class="rumi0" d="M3401.6 440.96c1977.13,-467.31 3651.5,-85.43 3836.14,914.15 184.64,999.19 -1207.06,2271.61 -3130.65,2794.04 -1923.19,522.82 -3602.29,144.88 -3834.17,-901.16 -231.49,-1046.04 1151.55,-2339.72 3128.68,-2807.03z" />
                                <path class="rumi2 strumi11" d="M5960.61 1594.87c267.32,636.21 -531.88,1461.39 -1785.79,1842.87 -1253.91,381.88 -2487.35,175.98 -2755.06,-460.23 -267.71,-636.21 531.88,-1461.39 1785.79,-1843.27 1253.91,-381.49 2487.35,-175.59 2755.06,460.62z" />
                                <path class="none" d="M706.78 1938.17c463.77,-557.47 1277.53,-1071.63 2292.47,-1386.19 369.28,-114.17 737.39,-193.7 1092.89,-239.76l-182.28 627.55c-225.19,31.89 -457.08,83.46 -689.35,155.51 -747.23,231.49 -1333.83,622.43 -1631.46,1037.38l-882.26 -194.48z" />
                                <path class="none" d="M3763.01 4179.47c-1606.27,321.65 -3058.2,-18.5 -3405.05,-858.65 -174.01,-421.65 -40.55,-898.8 322.04,-1349.58l885.41 195.27c-185.04,273.62 -243.7,556.29 -138.97,809.43 228.74,554.71 1167.69,788.57 2222,600.38l114.56 603.14 0 0z" />
                                <path class="none" d="M6719.65 2623.99c-463.77,557.86 -1277.93,1072.02 -2292.87,1386.59 -207.08,64.17 -413.38,116.93 -617.7,159.44l-114.17 -602.35c162.99,-30.71 328.73,-71.65 494.87,-123.22 673.21,-208.66 1216.12,-546.44 1534.61,-914.94l995.26 94.49 0 -0z" />
                                <path class="none" d="M7068.06 1241.73c174.01,421.25 40.94,897.22 -320.07,1347.61l-994.47 -94.49c255.11,-310.23 350.78,-640.15 230.7,-931.08 -214.56,-520.07 -1052.34,-757.86 -2024.37,-631.09l182.28 -626.76c1407.85,-170.86 2614.12,179.92 2925.93,935.81l-0 0z" />
                                <path class="none" d="M3617.29 3548.39c-1014.94,176.77 -1915.71,-50 -2136.18,-584.63 -100.39,-243.3 -45.28,-514.56 130.7,-777.54l319.52 69.2c-441.19,897.29 211.43,1241.78 1653.83,1093.7l32.13 199.27z" />
                                <path class="none" d="M2298.3 2330.48c-7.72,10.38 -15.11,20.75 -22.21,31.1l-0.41 0.59c-5.63,8.22 -11.05,16.44 -16.28,24.64 -115.89,180.18 -124.7,328.85 -60.04,444.72 13.24,25.24 30.01,49.48 50.5,72.56 103.49,116.45 287.1,187.02 517.42,212.54 236.76,31.17 527.25,11.24 778.76,-32.68l32.61 245.71c-1442.4,148.08 -2063.28,-175.89 -1622.09,-1073.19l341.72 74.01z" />
                                <path class="none" d="M3644.91 3301.93l-40.55 -249.6c202.75,-46.06 411.41,-113.38 614.95,-201.96 273.22,-118.5 501.56,-259.84 672.43,-407.08l437.39 46.06c-338.97,275.59 -1125.17,723.61 -1684.22,812.58z" />
                                <path class="none" d="M5664.94 2524.38c-308.26,357.87 -834.63,686.2 -1488.16,888.56 -166.14,51.57 -331.49,92.13 -494.48,122.44l-33.07 -205.9c53.94,-8.27 124.01,-24.8 374.01,-102.36 351.96,-109.05 969.67,-422.04 1332.26,-735.02l309.44 32.28z" />
                                <path class="none" d="M1962.65 2214.94l-308.65 -67.32c287,-403.93 856.68,-784.63 1583.83,-1009.82 222.83,-69.29 444.87,-118.89 661.01,-150l-78.35 280.31c-70.08,9.06 -101.18,10.63 -414.56,107.87 -390.94,120.86 -1110.21,494.08 -1443.28,838.96l-0 0z" />
                                <path class="none" d="M3751.99 1513.38c-183.46,45.28 -370.86,107.87 -554.32,187.4 -388.57,168.89 -686.99,383.46 -857.86,596.05l-355.9 -77.56c229.52,-249.21 1189.35,-833.45 1828.31,-922.42l-60.24 216.53 0 0z" />
                                <path class="none" d="M5914.54 1591.33c115.74,281.1 24.41,599.2 -220.86,898.8l-385.45 -41.57c621.72,-905.72 16.45,-1371.42 -1447.72,-1152.64l87.94 -314.81c943.68,-124.41 1757.84,105.9 1966.1,610.22z" />
                                <path class="none" d="M5284.61 2447.22l-349.5 -38.26c141.48,-124.09 221.05,-238.45 263.74,-353.56 59.99,-148.37 47.32,-287.41 -52.06,-399.07 -76.78,-86.52 -197.57,-147.69 -348.75,-183.92 -244.59,-64.68 -583.05,-69.83 -997.36,29.87l55 -193.51c1467.04,-220.21 2051.2,231.9 1428.92,1138.44z" />
                                <path class="rumi7" d="M5114.56 1667.31c274.01,308.65 -131.49,831.87 -906.28,1168.87 -774.79,336.61 -1625.17,359.44 -1899.17,50.79 -274.41,-308.65 131.49,-831.87 905.89,-1168.48 774.79,-337 1625.17,-359.83 1899.57,-51.18z" />
                                <polygon class="rumi2" points="1737.07,1632.67 1837.85,1529.52 1629.2,1398.42 1483.14,1528.74 " />
                                <path class="rumi2" d="M1996.51 1716.13c16.14,-12.6 35.43,-27.56 60.24,-46.46l-204.72 -100 -45.28 49.21 189.76 97.24z" />
                                <path class="rumi2" d="M1375.66 2745.64c-0.39,-18.5 -1.18,-40.55 0,-68.5l-253.54 2.36 4.33 83.86 249.21 -17.72z" />
                                <polygon class="rumi2" points="1044.56,2679.11 1053.62,2785.01 932.76,2812.96 925.28,2673.99 " />
                                <polygon class="rumi2" points="2430.76,3844.43 2293.36,3792.07 2215.8,3868.06 2383.12,3939.71 " />
                                <path class="rumi2" d="M2531.93 3614.13c-30.31,-4.33 -60.24,-8.66 -89.37,-13.39l-87.4 156.3 77.95 27.56 98.81 -170.47 0 0z" />
                                <polygon class="rumi2" points="4134.26,3658.61 4299.61,3602.71 4456.7,3784.59 4202.37,3866.09 " />
                                <path class="rumi2" d="M4077.57 3477.51c27.95,-7.48 57.48,-16.14 87.8,-25.59l75.2 125.98 -92.52 31.1 -70.47 -131.49z" />
                                <polygon class="rumi2" points="5836.59,2834.61 5933.05,2753.51 6147.22,2848 6031.86,2945.24 " />
                                <path class="rumi2" d="M5777.14 2790.13l57.48 -46.06 -207.87 -109.44c-18.9,18.9 -36.61,36.61 -53.54,51.57l203.93 103.93z" />
                                <polygon class="rumi2" points="6460.11,1797.3 6462.47,1903.59 6760.49,1916.19 6761.67,1763.05 " />
                                <path class="rumi2" d="M6430.67 1888.06l0 -56.3 -399.99 30.71c3.54,23.23 5.91,46.06 7.09,67.72l392.91 -42.13z" />
                                <path class="rumi2" d="M5457.86 825.2l-85.43 -19.29c-47.64,64.17 -95.28,127.95 -142.91,192.12 33.46,9.45 66.14,19.69 97.63,31.1l130.7 -203.93 0 0z" />
                                <polygon class="rumi2" points="5520.46,790.95 5345.26,757.89 5448.41,590.56 5631.48,611.04 " />
                                <polygon class="rumi2" points="3526.01,790.17 3690.96,746.86 3603.17,577.18 3428.37,626.78 " />
                                <path class="rumi2" d="M3748.44 965.75c-28.35,5.51 -57.09,10.63 -86.61,16.54l-79.53 -147.63 84.65 -22.05 81.5 153.15z" />
                                <path class="rumi8" d="M268.2 3212.17c-121.65,828.33 328.73,1367.69 1420.44,1583.43 2002.32,304.32 3690.08,-337.39 5147.53,-1675.56 324.4,-362.98 559.04,-738.96 389.76,-1334.22 -762.98,2605.06 -6408.14,3469.61 -6957.73,1426.35l0 -0z" />
                                <path class="rumi9" d="M2384.3 4550.33l0 0c112.2,0 203.93,92.13 204.33,204.72l0.39 116.53c-135.43,-1.57 -271.65,-8.27 -409.44,-19.69l0 -96.85c0,-112.59 92.13,-204.72 204.72,-204.72z" />
                                <path class="rumi2" d="M2390.6 4562.53l0 0c112.2,0 205.9,92.13 204.33,204.33l-1.57 105.11c-135.43,-3.15 -267.71,-7.87 -405.5,-17.72l-1.97 -87.4c-2.76,-112.2 92.13,-204.33 204.72,-204.33l0 0z" />
                                <path class="rumi9" d="M4071.67 4316.47l0 0c112.2,0 206.69,91.73 204.33,204.33l-2.36 114.56c-135.43,43.7 -269.68,75.98 -407.08,105.11l0.39 -219.68c0,-112.59 92.13,-204.33 204.72,-204.33l0 0z" />
                                <path class="rumi2" d="M4088.59 4325.53l0 0c112.59,0 207.08,92.13 204.72,204.33l-2.36 100c-132.67,44.09 -267.32,77.56 -407.08,107.08l0.39 -207.08c0,-112.2 92.13,-204.33 204.33,-204.33l0 0z" />
                                <path class="rumi9" d="M5777.14 3595.23l0 0c116.14,0 205.9,97.24 205.9,211.81 -130.7,88.19 -268.5,179.52 -409.83,257.87l-0.39 -265.35c-0.39,-112.2 91.73,-204.33 204.33,-204.33z" />
                                <path class="rumi2" d="M5796.04 3616.49l0 0c116.14,0 187,75.98 187,190.55 -125.19,84.25 -246.06,166.53 -390.94,247.24l-0.39 -261.81c-0.39,-112.59 92.13,-175.98 204.33,-175.98z" />
                                <path class="rumi9" d="M7096.8 2423.6l0 0c54.72,0 104.33,21.65 140.94,56.69 -37.4,143.7 -159.44,386.61 -341.33,580.3l-3.94 -432.67c-1.18,-112.2 92.13,-204.33 204.33,-204.33z" />
                                <path class="rumi2" d="M7116.49 2440.92l0 0c54.72,0 84.65,4.72 121.26,40.16 -39.37,148.42 -151.57,359.44 -321.65,560.22l-3.94 -395.66c-1.18,-112.59 92.13,-204.72 204.33,-204.72z" />
                                <path class="rumi0" d="M812.28 4057.81l0 0c112.59,0 204.72,92.13 204.72,204.33 0,70.08 12.6,324.8 11.81,330.31 -149.21,-70.08 -281.1,-143.7 -419.68,-270.86l-1.18 -59.45c-3.15,-112.2 91.73,-204.33 204.33,-204.33l0 0z" />
                                <path class="rumi2" d="M819.37 4067.26l0 0c112.59,0 204.72,92.13 204.72,204.72 0,69.69 12.6,324.4 11.81,329.91 -149.21,-70.08 -281.1,-143.7 -419.28,-270.86l-1.57 -59.06c-3.15,-112.59 91.73,-204.72 204.33,-204.72l0 0z" />
                                <g id="_2059959272512">
                                    <polygon class="rumi10" points="4013.8,2109.82 4333.08,1938.57 4207.89,1898.41 3888.6,2069.28 3724.43,2015.34 3603.57,2067.31 3152,1914.16 2924.84,1990.93 3367.74,2162.19 3246.88,2222.42 3452,2303.13 3452,2303.13 3130.74,2477.14 3236.25,2526.74 3566.17,2348.4 3796.08,2438.95 3920.49,2367.69 4469.69,2575.56 4671.65,2420.84 4150.8,2244.07 4224.81,2178.72 " />
                                    <polygon class="rumi11" points="4015.37,2097.23 4334.65,1925.97 4209.46,1885.81 3890.57,2056.68 3726,2003.13 3605.14,2054.71 3153.97,1901.56 2926.81,1978.72 3369.71,2149.59 3248.85,2210.22 3453.57,2290.53 3453.57,2290.53 3132.71,2464.54 3238.22,2514.15 3567.74,2335.8 3798.05,2426.35 3922.46,2355.09 4471.66,2562.96 4673.62,2408.64 4152.37,2231.48 4226.39,2166.12 " />
                                    <path class="rumi12" d="M3496.87 2082.27l-3.94 12.6 -41.73 -13.78 -7.09 20.87 37.8 12.2 -3.94 11.81 -37.4 -12.6 -7.09 21.26 43.31 14.17 -3.94 12.2 -56.69 -18.5 25.59 -78.35 55.12 18.11zm38.58 24.01c-3.54,-1.18 -7.09,-1.57 -10.24,-0.79 -2.76,0.79 -4.72,2.76 -5.91,5.91 -1.18,3.15 -0.39,5.91 1.18,8.66 1.97,2.36 6.69,5.91 14.17,10.63 7.48,4.33 12.6,9.06 15.35,13.78 3.15,5.12 3.54,11.02 1.18,17.72 -2.36,6.69 -6.69,11.42 -12.99,14.17 -6.69,2.36 -14.17,2.36 -22.44,-0.39 -12.6,-3.94 -22.05,-11.81 -28.74,-23.23l11.81 -7.09c5.51,9.45 12.6,15.35 21.26,18.11 4.33,1.57 7.87,1.57 11.02,0.79 3.15,-1.18 5.12,-3.15 5.91,-6.3 1.18,-2.76 0.79,-5.51 -1.18,-8.27 -1.57,-2.36 -5.12,-5.12 -10.63,-8.27 -5.12,-3.54 -9.06,-6.3 -11.81,-8.27 -2.76,-1.97 -4.72,-4.33 -6.3,-7.09 -3.54,-5.12 -4.33,-11.42 -1.97,-18.5 2.36,-7.09 7.09,-11.81 13.39,-14.17 6.69,-2.36 13.78,-1.97 21.65,0.39 5.12,1.57 9.84,4.33 14.17,7.48 4.33,3.15 7.87,7.09 10.24,11.02l-10.24 7.87c-1.57,-3.15 -3.94,-5.91 -7.48,-8.27 -3.54,-2.76 -7.48,-4.72 -11.42,-5.91zm64.57 83.07c4.72,1.57 8.66,1.97 12.6,1.57 3.94,-0.39 7.87,-1.97 12.6,-3.94l5.91 11.42c-11.42,6.69 -22.83,7.87 -34.65,3.94 -12.2,-3.94 -20.47,-11.02 -25.98,-20.87 -5.51,-10.24 -5.91,-21.26 -2.36,-33.07 3.94,-11.42 11.02,-20.08 21.65,-25.2 10.24,-5.12 21.65,-5.91 33.86,-1.97 12.2,4.33 20.87,11.81 25.98,23.62l-11.42 6.3c-2.36,-4.72 -5.12,-8.27 -7.87,-11.02 -3.15,-2.36 -6.69,-4.33 -11.02,-5.91 -8.27,-2.36 -15.75,-1.97 -22.44,1.18 -7.09,3.54 -12.2,9.06 -14.57,17.32 -2.76,7.87 -2.36,15.35 1.57,22.44 3.54,7.09 9.06,11.81 16.14,14.17zm123.62 -33.07l-3.94 12.2 -42.13 -13.39 -6.69 20.47 37.8 12.6 -3.94 11.42 -37.4 -12.2 -7.09 21.26 43.31 13.78 -3.94 12.6 -56.69 -18.5 25.59 -78.35 55.12 18.11zm77.17 25.2l13.39 4.33 -25.59 78.35 -14.57 -4.72 -25.59 -71.65 -18.9 57.09 -12.99 -4.33 25.59 -78.35 12.99 4.33 26.38 73.23 19.29 -58.27zm26.38 75.59l-13.78 15.35 -14.17 -4.72 60.24 -67.32 14.17 4.72 9.06 89.76 -14.17 -4.72 -1.97 -20.47 -39.37 -12.6zm37.79 -1.18l-3.54 -37.01 -24.8 27.56 28.35 9.45zm108.66 9.84c-4.33,12.99 -12.6,19.29 -25.2,18.9l11.42 35.43 -16.93 -5.51 -10.24 -32.68 -17.32 -5.51 -8.66 26.38 -12.99 -4.33 25.59 -78.35 29.13 9.45c11.81,3.94 19.69,8.66 23.62,14.17 3.94,5.91 4.33,13.39 1.57,22.05zm-37.8 3.94c7.48,2.36 12.99,2.76 16.54,1.57 3.15,-1.57 5.91,-4.72 7.48,-9.84 1.57,-5.12 1.57,-9.06 -0.79,-11.81 -1.97,-3.15 -6.69,-5.51 -13.78,-7.87l-16.93 -5.51 -9.06 27.95 16.54 5.51zm64.96 -23.23l13.39 4.33 -25.59 78.74 -13.39 -4.33 25.59 -78.74zm85.04 48.43c-3.54,-7.48 -9.45,-12.2 -16.93,-14.96 -7.87,-2.36 -15.35,-1.97 -22.44,1.97 -7.48,3.94 -12.2,9.84 -14.57,17.72 -2.76,7.87 -2.36,15.35 1.18,22.44 3.54,7.48 9.45,12.2 17.32,14.96 7.48,2.36 14.96,1.97 22.05,-1.97 7.48,-3.94 12.2,-9.84 14.57,-17.72 2.76,-7.87 2.36,-15.35 -1.18,-22.44zm-6.3 51.96c-10.63,5.12 -21.65,5.91 -33.07,2.36 -11.81,-3.94 -20.47,-11.02 -25.98,-21.26 -5.12,-10.24 -5.91,-21.26 -2.36,-33.07 3.94,-11.42 11.02,-19.69 21.26,-24.8 10.63,-5.51 21.65,-5.91 33.46,-2.36 11.42,3.94 20.08,11.02 25.59,21.26 5.12,10.24 6.3,21.26 2.36,33.07 -3.94,11.42 -11.02,19.69 -21.26,24.8z" />
                                </g>
                                <path class="rumi13" d="M860.68 3195.95c10.14,15.81 26.73,24.93 47.07,23.19 31.67,-2.72 50.65,-30.69 46.29,-81.55l-8.52 -99.39 -203.43 17.44 9.02 105.2c4.58,53.48 27.32,79.63 62.48,76.61 25.57,-2.19 41.76,-18.22 47.09,-41.51zm57.41 -61.13c1.97,22.96 -4.81,36.13 -20.79,37.5 -15.98,1.37 -25.19,-10.43 -27.17,-33.39l-4.01 -46.79 47.95 -4.11 4.01 46.79zm-131.82 19.5l-4.71 -54.93 50.28 -4.31 4.71 54.93c2.09,24.41 -4.92,38.19 -22.07,39.66 -17.43,1.5 -26.11,-10.93 -28.2,-35.35zm-16.41 122.99l53.8 139.63 35.93 -13.84 -36.81 -95.54 154.6 -59.57 -16.99 -44.09 -190.53 73.41zm114.01 246.01c35.78,53.27 99.34,67.85 149.94,33.85 50.6,-33.99 61.14,-98.34 25.35,-151.61 -35.94,-53.51 -99.58,-67.69 -149.94,-33.85 -50.36,33.83 -61.3,98.1 -25.36,151.61zm33.41 -22.44c-20.33,-30.27 -13.58,-67.83 18.62,-89.46 32.2,-21.63 69.53,-13.67 89.86,16.59 20.33,30.27 13.59,67.83 -18.62,89.46 -32.2,21.63 -69.52,13.67 -89.86,-16.6zm222.5 276.28c-13.94,1.55 -25.6,-1.84 -35.17,-9.96 -7.78,-6.6 -12,-15.16 -12.76,-29.58 42.2,17.46 89.19,7.62 120.15,-28.84 39.46,-46.48 32.09,-111.26 -16.82,-152.8 -49.14,-41.72 -114.23,-38.06 -153.5,8.19 -35.87,42.24 -33.22,99.97 4.94,141.55 2.5,45.74 11.56,67.96 34.68,87.6 17.12,14.54 37.46,20.33 58.26,16.56l0.22 -32.71zm-61.63 -182.04c25.11,-29.57 63.19,-32.06 90.98,-8.46 27.8,23.6 31.52,61.58 6.41,91.15 -25.11,29.57 -63.19,32.06 -90.98,8.46 -27.8,-23.59 -31.52,-61.58 -6.41,-91.15zm176.74 256.95c51.27,27.22 97.26,13.99 125.43,-39.08l53.62 -100.98 -41.22 -21.89 -52.8 99.44c-18.19,34.26 -40.4,40.63 -65.9,27.09 -25.25,-13.4 -32.67,-35.51 -14.48,-69.77l52.8 -99.44 -41.73 -22.16 -53.62 100.99c-28.17,53.07 -13.37,98.57 37.9,125.8zm183.11 41.07l16.66 -44.22 88.71 33.42 12.96 -34.39 -88.71 -33.42 15.63 -41.49 100.44 37.84 13.37 -35.48 -144.39 -54.4 -71.98 191.07 147.94 55.74 13.37 -35.48 -104 -39.18zm354.84 141.85l48.63 9.72 -49.47 -218.12 -45.76 -9.15 -129.29 182.36 47.48 9.5 26.31 -39.36 92.96 18.6 9.15 46.45zm-80.19 -97.25l47.08 -70.3 16.41 83.01 -63.5 -12.7z" />
                                <path class="rumi13" d="M1981.5 1288.41c9.06,-15.46 9.63,-33.5 -0.65,-50.04 -16.01,-25.74 -47.98,-29.76 -89.32,-4.06l-80.78 50.23 102.81 165.34 85.51 -53.17c43.46,-27.02 55.85,-57.66 38.09,-86.24 -12.93,-20.79 -33.55,-27.61 -55.65,-22.06zm-76.78 -22.35c18.66,-11.6 32.79,-11.54 40.86,1.45 8.08,12.99 2.04,25.92 -16.63,37.53l-38.03 23.65 -24.24 -38.98 38.03 -23.65zm73.59 103.6l-44.64 27.76 -25.41 -40.87 44.65 -27.76c19.84,-12.33 34.58,-12.33 43.24,1.61 8.81,14.17 2,26.93 -17.83,39.26zm116.72 -30.9l124.93 -68.93 -17.74 -32.15 -85.48 47.17 -76.32 -138.33 -39.45 21.77 94.06 170.47zm229.72 -119.26c54.98,-26.86 77.04,-85 51.53,-137.23 -25.52,-52.24 -84.93,-70.58 -139.92,-43.72 -55.23,26.98 -76.92,85.24 -51.52,137.23 25.39,51.98 84.68,70.69 139.91,43.71zm-16.85 -34.49c-31.24,15.26 -65.84,4 -82.08,-29.24 -16.24,-33.24 -3.85,-67.46 27.39,-82.72 31.24,-15.26 65.85,-3.99 82.08,29.25 16.24,33.24 3.85,67.46 -27.39,82.72zm314.66 -109.94c-4.41,12.63 -12.14,21.26 -23.06,26.13 -8.89,3.97 -17.98,4.07 -30.7,-1.22 32.41,-29.08 43.32,-73.56 24.72,-115.21 -23.7,-53.09 -82.44,-73.46 -138.32,-48.52 -56.13,25.06 -79.81,82.54 -56.24,135.37 21.54,48.26 72.27,69.78 123.76,54.11 40.36,16.71 63.21,18.08 89.62,6.29 19.56,-8.73 32.92,-23.83 38.26,-43.27l-28.04 -13.68zm-181.94 -22.04c-15.08,-33.78 -1.52,-67.55 30.22,-81.72 31.75,-14.17 65.94,-1.72 81.02,32.06 15.08,33.78 1.52,67.56 -30.23,81.72 -31.75,14.17 -65.94,1.72 -81.02,-32.06zm306 -20.11c51.56,-20.13 70.59,-61.61 49.76,-114.98l-39.67 -101.57 -41.45 16.19 39.06 100.01c13.46,34.46 4.25,54.48 -21.4,64.49 -25.39,9.91 -45.98,1.54 -59.44,-32.93l-39.06 -100.01 -41.97 16.39 39.66 101.57c20.85,53.37 62.95,70.97 114.51,50.83zm153.24 -98.38l-15.08 -42.46 85.19 -30.26 -11.73 -33.03 -85.18 30.26 -14.15 -39.84 96.45 -34.26 -12.1 -34.07 -138.65 49.25 65.17 183.47 142.06 -50.46 -12.1 -34.07 -99.87 35.47zm329.78 -172.82c12.82,-12.52 18.15,-29.76 12.61,-48.43 -8.63,-29.06 -38.41,-41.4 -85.07,-27.54l-91.19 27.08 55.42 186.65 96.53 -28.67c49.06,-14.57 69.11,-40.83 59.54,-73.09 -6.97,-23.47 -25.05,-35.5 -47.83,-36zm-68.14 -41.86c21.06,-6.26 34.67,-2.46 39.02,12.2 4.36,14.67 -4.89,25.54 -25.96,31.8l-42.93 12.75 -13.07 -44 42.93 -12.75zm43.57 119.37l-50.4 14.96 -13.7 -46.13 50.39 -14.96c22.4,-6.65 36.61,-2.75 41.28,12.98 4.75,16 -5.19,26.49 -27.58,33.15z" />
                                <path class="rumi13" d="M4704.33 3626.48c12.02,-13.8 16,-31.8 8.81,-50.34 -11.19,-28.86 -42.53,-38.96 -88.88,-20.98l-90.58 35.12 71.89 185.41 95.88 -37.18c48.73,-18.89 66.97,-47.3 54.54,-79.34 -9.04,-23.31 -28.44,-34.07 -51.67,-32.68zm-72.83 -36.96c20.92,-8.11 35.09,-5.38 40.74,9.19 5.65,14.57 -2.87,26.4 -23.79,34.52l-42.64 16.53 -16.95 -43.7 42.64 -16.54zm54.25 117.91l-50.06 19.41 -17.77 -45.82 50.06 -19.41c22.25,-8.63 37.04,-5.83 43.1,9.79 6.16,15.89 -3.09,27.4 -25.33,36.03zm122.22 -10.87l134.57 -55.92 -14.39 -34.63 -92.08 38.26 -61.91 -149 -42.5 17.66 76.31 183.63zm243.94 -102.45c56.46,-26.79 79.67,-85.91 54.21,-139.55 -25.46,-53.64 -85.93,-73.06 -142.39,-46.26 -56.72,26.92 -79.54,86.17 -54.21,139.56 25.33,53.38 85.67,73.17 142.38,46.26zm-16.81 -35.41c-32.08,15.22 -67.29,3.31 -83.48,-30.82 -16.2,-34.13 -3.15,-68.94 28.93,-84.16 32.08,-15.22 67.29,-3.31 83.49,30.82 16.2,34.13 3.15,68.94 -28.93,84.16zm315.04 -123.82c-3.57,13.19 -10.8,22.54 -21.57,28.31 -8.76,4.69 -18.02,5.46 -31.36,1.01 30.87,-32.01 38.72,-78.11 16.72,-119.18 -28.04,-52.34 -89.38,-68.78 -144.47,-39.27 -55.34,29.64 -75.25,89.94 -47.35,142.02 25.49,47.57 78.74,65.78 130.04,46.03 42.33,14.06 65.71,13.78 91.75,-0.17 19.29,-10.33 31.79,-26.7 35.8,-46.89l-29.57 -11.87zm-186.96 -9.1c-17.84,-33.3 -6.51,-68.7 24.79,-85.47 31.3,-16.77 67.05,-6.59 84.89,26.71 17.84,33.3 6.5,68.7 -24.8,85.47 -31.3,16.77 -67.05,6.59 -84.89,-26.71zm305.63 -52.32c48.41,-29.19 60.4,-74.23 30.19,-124.34l-57.5 -95.37 -38.92 23.47 56.61 93.91c19.5,32.35 13.7,54.1 -10.39,68.62 -23.84,14.37 -46.02,9.5 -65.52,-22.86l-56.61 -93.91 -39.41 23.76 57.49 95.37c30.21,50.11 75.64,60.54 124.06,31.35zm131.23 -129.81l-25.64 -38.22 76.67 -51.44 -19.94 -29.72 -76.67 51.44 -24.06 -35.86 86.81 -58.24 -20.57 -30.67 -124.8 83.73 110.79 165.13 127.86 -85.78 -20.57 -30.67 -89.88 60.3zm205.26 -98.34l70.96 -55.91c51.1,-40.26 61.87,-98.66 24.59,-145.96 -37.28,-47.3 -96.57,-50.49 -147.67,-10.22l-70.95 55.91 123.07 156.19zm12.76 -58.16l-76.3 -96.84 33.02 -26.02c31.02,-24.44 65.91,-21.93 89.48,7.98 23.56,29.9 17.85,64.42 -13.17,88.86l-33.03 26.02z" />
                                <path class="rumi13" d="M5914.06 639.45c18.05,-4.15 32.03,-16.51 37.17,-35.97 8.01,-30.3 -11.63,-57.2 -60.28,-70.07l-95.06 -25.15 -51.46 194.57 100.62 26.61c51.15,13.52 82.98,1.13 91.87,-32.5 6.47,-24.46 -3.02,-44.81 -22.86,-57.5zm-37.63 -73.6c21.96,5.81 31.93,16.47 27.89,31.76 -4.04,15.29 -18.06,19.91 -40.02,14.1l-44.75 -11.83 12.13 -45.87 44.74 11.84zm-25.74 128.81l-52.53 -13.89 12.72 -48.09 52.53 13.89c23.35,6.18 33.8,17.27 29.46,33.67 -4.41,16.68 -18.83,20.6 -42.18,14.43zm105.7 67.04l138.37 51.08 13.15 -35.61 -94.67 -34.95 56.55 -153.2 -43.69 -16.13 -69.7 188.8zm245.7 105.06c56.22,28.99 118.03,11.38 145.57,-42.03 27.54,-53.41 6.06,-113.98 -50.16,-142.98 -56.47,-29.12 -118.16,-11.12 -145.57,42.04 -27.41,53.15 -6.31,113.84 50.16,142.97zm18.19 -35.26c-31.94,-16.47 -43.97,-52.11 -26.44,-86.09 17.53,-33.99 53.54,-44.85 85.48,-28.38 31.94,16.48 43.97,52.12 26.44,86.1 -17.52,33.98 -53.54,44.85 -85.48,28.37zm273.14 213.45c-13.58,2.62 -25.3,0.2 -35.33,-7.03 -8.17,-5.88 -12.98,-13.95 -14.86,-28.07 42.82,13.85 88.23,0.49 115.8,-37.76 35.13,-48.76 22.81,-111.84 -28.51,-148.81 -51.55,-37.14 -115.22,-28.44 -150.18,20.08 -31.93,44.32 -24.81,100.83 15.94,138.7 6.04,44.74 16.68,65.88 40.94,83.35 17.96,12.94 38.4,17.04 58.54,11.7l-2.34 -32.16zm-74.82 -174.03c22.35,-31.03 59.57,-36.46 88.73,-15.45 29.17,21.01 35.8,58.04 13.44,89.06 -22.35,31.02 -59.57,36.45 -88.74,15.44 -29.16,-21.01 -35.79,-58.04 -13.44,-89.06zm160.75 280.31c37.37,43.33 84.35,47.62 129.2,8.94l85.35 -73.61 -30.04 -34.83 -84.04 72.47c-28.96,24.97 -51.63,22.89 -70.22,1.33 -18.4,-21.34 -17.32,-44.3 11.64,-69.26l84.04 -72.48 -30.42 -35.27 -85.35 73.61c-44.85,38.68 -47.51,85.78 -10.15,129.1zm133.77 136.7l42.29 -19.51 39.15 84.85 32.89 -15.17 -39.14 -84.85 39.68 -18.3 44.32 96.07 33.94 -15.66 -63.71 -138.1 -182.74 84.3 65.27 141.5 33.94 -15.66 -45.88 -99.47zm28.82 329.1c-1.17,35.06 10.52,64.5 33.16,84.23l28.57 -28.97c-15.35,-14.03 -22.83,-31.25 -22.17,-51.36 1.25,-37.65 28.57,-63.49 66.5,-62.24 37.93,1.26 63.48,28.86 62.23,66.51 -0.67,20.11 -9.28,36.8 -25.24,49.79l26.59 30.8c23.62,-18.2 37.22,-46.81 38.37,-81.57 2.08,-62.64 -39.77,-110.63 -100.4,-112.65 -60.63,-2.01 -105.56,43.1 -107.63,105.46z" />
                            </g>

                        </svg>
                    </div>


                </div>

            </div >
            <div client="1" hall="2" session="0" id="rsr" className="hasSVG d-none">

                <ExampleDataTable />
            </div>
        </>
    )

}

export default Viewssvg